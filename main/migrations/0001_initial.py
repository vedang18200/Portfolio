# Generated by Django 4.2.7 on 2025-08-15 06:35

import django.core.validators
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ContactMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("subject", models.CharField(max_length=200)),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="Vedang Deshmukh", max_length=100)),
                (
                    "tagline",
                    models.CharField(
                        default="Aspiring AIML Student and Developer", max_length=200
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        default="I am a second-year Computer Science student specializing in Artificial Intelligence and Machine Learning."
                    ),
                ),
                (
                    "profile_image",
                    models.ImageField(blank=True, null=True, upload_to="profile/"),
                ),
                (
                    "email",
                    models.EmailField(
                        default="vedangdeshmukh777@gmail.com", max_length=254
                    ),
                ),
                (
                    "github_url",
                    models.URLField(default="https://github.com/vedang18200"),
                ),
                ("linkedin_url", models.URLField(blank=True)),
                ("twitter_url", models.URLField(blank=True)),
                ("location", models.CharField(blank=True, max_length=100)),
            ],
            options={
                "verbose_name_plural": "Profile",
            },
        ),
        migrations.CreateModel(
            name="Resume",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(default="My Resume", max_length=100)),
                ("file", models.FileField(upload_to="resume/")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Currently active resume"
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("programming", "Programming Languages"),
                            ("framework", "Frameworks"),
                            ("database", "Databases"),
                            ("tool", "Tools & Technologies"),
                            ("ai_ml", "AI/ML"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                (
                    "proficiency",
                    models.IntegerField(
                        default=50, help_text="Proficiency percentage (0-100)"
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True, help_text="Font Awesome icon class", max_length=50
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, help_text="Show on main page"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-proficiency", "name"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "short_description",
                    models.CharField(
                        help_text="Brief description for cards", max_length=250
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed project description"),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="projects/"),
                ),
                (
                    "github_url",
                    models.URLField(
                        blank=True, validators=[django.core.validators.URLValidator()]
                    ),
                ),
                (
                    "live_url",
                    models.URLField(
                        blank=True,
                        help_text="Live demo URL",
                        validators=[django.core.validators.URLValidator()],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("completed", "Completed"),
                            ("in_progress", "In Progress"),
                            ("planned", "Planned"),
                        ],
                        default="completed",
                        max_length=20,
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, help_text="Show on main page"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(default=0, help_text="Display order"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "technologies",
                    models.ManyToManyField(
                        blank=True, related_name="projects", to="main.skill"
                    ),
                ),
            ],
            options={
                "ordering": ["-is_featured", "order", "-created_at"],
            },
        ),
    ]
